_ceph-lazy()
{
  local cur prev opts
  COMPREPLY=()
  cur="${COMP_WORDS[COMP_CWORD]}"
  prev="${COMP_WORDS[COMP_CWORD-1]}"
   
  opts="-d -h pg-get-host pg-most-write pg-less-write pg-most-write-kb pg-less-write-kb pg-most-read pg-less-read pg-most-read-kb pg-less-read-kb pg-empty rbd-prefix rbd-count rbd-host rbd-size osd-most-used osd-less-used osd-get-ppg osd-get-pg object-get-host"

# If first option is -d keep completing without -d & -h

  if [[ ${prev} == "-d" && ${#COMP_WORDS[@]} -eq 3 ]] ; then
    opts="pg-get-host pg-most-write pg-less-write pg-most-write-kb pg-less-write-kb pg-most-read pg-less-read pg-most-read-kb pg-less-read-kb pg-empty rbd-prefix rbd-count rbd-host osd-most-used osd-less-usedosd-get-ppg osd-get-pg object-get-host"
        COMPREPLY=( $(compgen -W "${opts}" -- ${cur}) )
        return 0
# Do completion for first args
  elif [[ ${#COMP_WORDS[@]} -eq 2 ]]; then
    COMPREPLY=( $(compgen -W "${opts}" -- ${cur}) )
    return 0
# Else do nothing
  else
    return 0
  fi
}
complete -F _ceph-lazy ceph-lazy
